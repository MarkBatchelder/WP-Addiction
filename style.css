/*
Theme Name:		Marker Child
Theme URI:		https://github.com/WPAddiction/marker
Author:			Web First Designs
Author URI:		http://WebFirstDesigns.com
Description:	Starter child theme for Marker
Tags:			
Version:		0.9.3
License:		GNU General Public License v2 or later
License URI:	http://www.gnu.org/licenses/gpl-2.0.html
Text Domain:	marker-child
Template:		marker

Marker is based on Underscores http://underscores.me/, (C) 2012-2015 Automattic, Inc.

Normalizing styles have been helped along thanks to the fine work of
Nicolas Gallagher and Jonathan Neal http://necolas.github.com/normalize.css/
*/
/*--------------------------------------------------------------
>>> TABLE OF CONTENTS:
----------------------------------------------------------------
1.0 Normalize
2.0 Typography
	2.1 Headings
	2.2 Copy
	2.3 Links
3.0 Elements
	3.1 Lists
	3.2 Tables
	3.3 Blockquotes
	3.4 Pre & Code
4.0 Forms
	4.1 Buttons
	4.2 Fields
5.0 Accessibility
6.0 Alignments
7.0 Clearings
8.0 Layout
9.0 Body (Background)
10.0 Navigation
	10.1 Top Navigation
	10.2 Primary Navigation
11.0 Header
12.0 Sidebars
	12.1 Widgets
	12.2 Sidebar Widget Area
	12.3 Footer Widget Area
13.0 Content
	13.1 Asides
	13.2 Single
	13.3 Comments
	13.4 404
14.0 Footer
15.0 Theme Specific
16.0 Plugins
    16.1 Ninja Forms
17.0 Infinite scroll
18.0 Media
	18.1 Captions
	18.2 Galleries
19.0 Mobile Responsive
--------------------------------------------------------------*/
/* Body */
/* Top Navigation */
/* Primary Navigation */
/* Sections */
/* Elements & Forms */
/* Comments */
/* Sections */
/* Elements & Forms */
/* The mixin relies on a baseline of 10px (font-size: 62.5%) */
/*--------------------------------------------------------------
1.0 Normalize
--------------------------------------------------------------*/
html {
  font-family: sans-serif;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%; }

body {
  margin: 0; }

article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  display: block; }

audio,
canvas,
progress,
video {
  display: inline-block;
  vertical-align: baseline; }

audio:not([controls]) {
  display: none;
  height: 0; }

[hidden],
template {
  display: none; }

a {
  background-color: transparent; }

a:active,
a:hover {
  outline: 0; }

abbr[title] {
  border-bottom: 1px dotted; }

b,
strong {
  font-weight: bold; }

dfn {
  font-style: italic; }

h1 {
  font-size: 2em;
  margin: 0.67em 0; }

mark {
  background: #ff0;
  color: #000; }

small {
  font-size: 80%; }

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

img {
  border: 0; }

svg:not(:root) {
  overflow: hidden; }

figure {
  margin: 1em 40px; }

hr {
  box-sizing: content-box;
  height: 0; }

pre {
  overflow: auto; }

code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

button,
input,
optgroup,
select,
textarea {
  color: inherit;
  font: inherit;
  margin: 0; }

button {
  overflow: visible; }

button,
select {
  text-transform: none; }

button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer; }

button[disabled],
html input[disabled] {
  cursor: default; }

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

input {
  line-height: normal; }

input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  padding: 0; }

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

input[type="search"] {
  -webkit-appearance: textfield;
  box-sizing: content-box; }

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

legend {
  border: 0;
  padding: 0; }

textarea {
  overflow: auto; }

optgroup {
  font-weight: bold; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

/*--------------------------------------------------------------
2.0 Typography
--------------------------------------------------------------*/
body,
button,
input,
select,
textarea {
  font-family: Georgia, serif;
  font-size: 16px;
  font-size: 1rem;
  line-height: 1.5;
  color: #404040; }

/* 2.1 Headings
----------------------------------------------------------*/
h1,
h2,
h3,
h4,
h5,
h6 {
  clear: both;
  text-align: left; }

h1 a,
h2 a,
h3 a,
h4 a,
h5 a,
h6 a {
  text-decoration: none; }

h1 {
  font-family: sans-serif;
  font-size: 32px;
  font-size: 2rem;
  line-height: 1; }

h2,
h3,
h4,
h5,
h6 {
  font-family: sans-serif; }

h2 {
  font-size: 26px;
  font-size: 1.625rem;
  line-height: 1; }

h3 {
  font-size: 20px;
  font-size: 1.25rem;
  line-height: 1.25; }

h4,
h5,
h6 {
  font-size: 16px;
  font-size: 1rem;
  line-height: 1.5;
  font-weight: bold; }

/* 2.2 Copy
----------------------------------------------------------*/
p {
  margin-bottom: 2rem; }

cite {
  font-weight: bold; }

dfn,
em,
i {
  font-style: italic; }

address {
  margin: 0 0 2rem; }

abbr {
  border-bottom: 1px dotted #666;
  cursor: help; }

mark {
  background: #fff9c0;
  text-decoration: none; }

ins,
u {
  text-decoration: underline; }

del {
  text-decoration: line-through; }

/* Deprecated in HTML5, but just in case */
acronym {
  border-bottom: 1px dotted #666;
  cursor: help; }

big {
  font-size: 125%; }

/* 2.3 Links
----------------------------------------------------------*/
a {
  text-decoration: none;
  color: royalblue; }
  a:visited {
    text-decoration: none;
    color: purple; }
  a:hover, a:focus, a:active {
    text-decoration: none;
    color: midnightblue; }
  a:focus {
    outline: thin dotted; }
  a:hover, a:active {
    outline: 0; }

/*--------------------------------------------------------------
3.0 Elements
--------------------------------------------------------------*/
html {
  box-sizing: border-box; }

*,
*:before,
*:after {
  /* Inherit box-sizing to make it easier to change the property for components that leverage other behavior; see http://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/ */
  box-sizing: inherit; }

body {
  background: #fff;
  /* Fallback for when there is no custom background color defined. */ }

hr {
  height: 1px;
  /* We define a list of values for both units */
  /* We define a list of values for both units */
  /* We iterate through each value in the given parameter $values */
  /* If the value is either auto or 0, we append it to the list as-is */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  margin: 0 20px 20px;
  /* We output the result */
  margin: 0 2rem 2rem;
  /* We output the result */
  border: 0;
  background-color: #ccc; }

img {
  height: auto;
  /* Make sure images are scaled correctly. */
  max-width: 100%;
  /* Adhere to container width. */ }

figure {
  /* We define a list of values for both units */
  /* We define a list of values for both units */
  /* We iterate through each value in the given parameter $values */
  /* If the value is either auto or 0, we append it to the list as-is */
  /* We iterate through each value in the given parameter $values */
  /* If the value is either auto or 0, we append it to the list as-is */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  margin: 0 0 20px;
  /* We output the result */
  margin: 0 0 2rem;
  /* We output the result */
  line-height: 0; }
  figure figcaption {
    line-height: 1; }

/* 3.1 Lists
----------------------------------------------------------*/
ul, ol {
  /* We define a list of values for both units */
  /* We define a list of values for both units */
  /* We iterate through each value in the given parameter $values */
  /* If the value is either auto or 0, we append it to the list as-is */
  /* We iterate through each value in the given parameter $values */
  /* If the value is either auto or 0, we append it to the list as-is */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  margin: 0 0 20px 10px;
  /* We output the result */
  margin: 0 0 2rem 1rem;
  /* We output the result */
  /* We define a list of values for both units */
  /* We define a list of values for both units */
  /* We iterate through each value in the given parameter $values */
  /* If the value is either auto or 0, we append it to the list as-is */
  /* We iterate through each value in the given parameter $values */
  /* If the value is either auto or 0, we append it to the list as-is */
  /* We iterate through each value in the given parameter $values */
  /* If the value is either auto or 0, we append it to the list as-is */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  padding: 0 0 0 10px;
  /* We output the result */
  padding: 0 0 0 1rem;
  /* We output the result */ }

ul {
  list-style-type: disc; }

ol {
  list-style-type: decimal; }

li > ul,
li > ol {
  /* We define a list of values for both units */
  /* We define a list of values for both units */
  /* We iterate through each value in the given parameter $values */
  /* If the value is either auto or 0, we append it to the list as-is */
  /* We iterate through each value in the given parameter $values */
  /* If the value is either auto or 0, we append it to the list as-is */
  /* We iterate through each value in the given parameter $values */
  /* If the value is either auto or 0, we append it to the list as-is */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  margin: 0 0 0 10px;
  /* We output the result */
  margin: 0 0 0 1rem;
  /* We output the result */ }

dt {
  font-weight: bold; }

dd {
  /* We define a list of values for both units */
  /* We define a list of values for both units */
  /* We iterate through each value in the given parameter $values */
  /* If the value is either auto or 0, we append it to the list as-is */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  margin: 0 10px 20px;
  /* We output the result */
  margin: 0 1rem 2rem;
  /* We output the result */ }

/* 3.2 Tables
----------------------------------------------------------*/
table {
  width: 100%;
  /* We define a list of values for both units */
  /* We define a list of values for both units */
  /* We iterate through each value in the given parameter $values */
  /* If the value is either auto or 0, we append it to the list as-is */
  /* We iterate through each value in the given parameter $values */
  /* If the value is either auto or 0, we append it to the list as-is */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  margin: 0 0 20px;
  /* We output the result */
  margin: 0 0 2rem;
  /* We output the result */
  border-collapse: collapse; }

table,
th,
td {
  border: 1px solid #808080; }

th,
td {
  /* We define a list of values for both units */
  /* We define a list of values for both units */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  padding: 2px 4px;
  /* We output the result */
  padding: 0.2rem 0.4rem;
  /* We output the result */ }

th {
  font-weight: bold; }

.hentry th {
  background-color: transparent; }
.hentry tbody tr:nth-child(odd) {
  background-color: #eee; }

/* 3.3 Blockquotes
----------------------------------------------------------*/
blockquote,
q {
  quotes: "" ""; }
  blockquote:before, blockquote:after,
  q:before,
  q:after {
    content: ""; }

blockquote {
  /* We define a list of values for both units */
  /* We define a list of values for both units */
  /* We iterate through each value in the given parameter $values */
  /* If the value is either auto or 0, we append it to the list as-is */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  margin: 0 20px;
  /* We output the result */
  margin: 0 2rem;
  /* We output the result */
  padding-left: 0.3em;
  border-left: 5px solid #eee;
  font-style: italic; }

/* 3.4 Pre & Code
----------------------------------------------------------*/
pre {
  overflow: auto;
  max-width: 100%;
  /* We define a list of values for both units */
  /* We define a list of values for both units */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  margin-bottom: 20px;
  /* We output the result */
  margin-bottom: 2rem;
  /* We output the result */
  /* We define a list of values for both units */
  /* We define a list of values for both units */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  padding: 20px;
  /* We output the result */
  padding: 2rem;
  /* We output the result */
  font-family: "Courier 10 Pitch", Courier, monospace;
  font-size: 15px;
  font-size: 0.9375rem;
  line-height: 1.6; }

code, kbd, samp, var {
  font-family: Monaco, Consolas, "Andale Mono", "DejaVu Sans Mono", monospace;
  font-size: 15px;
  font-size: 0.9375rem;
  background: #eee; }

/* Deprecated in HTML5, but just in case */
tt {
  font-family: Monaco, Consolas, "Andale Mono", "DejaVu Sans Mono", monospace;
  font-size: 15px;
  font-size: 0.9375rem;
  background: #eee; }

/*--------------------------------------------------------------
4.0 Forms
--------------------------------------------------------------*/
/* 4.1 Buttons
----------------------------------------------------------*/
button,
input[type="button"],
input[type="reset"],
input[type="submit"] {
  border: 1px solid;
  border-color: #ccc #ccc #bbb;
  border-radius: 3px;
  background: #e6e6e6;
  box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.5), inset 0 15px 17px rgba(255, 255, 255, 0.5), inset 0 -5px 12px rgba(0, 0, 0, 0.05);
  color: rgba(0, 0, 0, 0.8);
  font-size: 14px;
  font-size: 0.875rem;
  line-height: 1.2;
  padding: .5em 1em;
  text-shadow: 0 1px 0 rgba(255, 255, 255, 0.8); }
  button:hover,
  input[type="button"]:hover,
  input[type="reset"]:hover,
  input[type="submit"]:hover {
    border-color: #ccc #bbb #aaa;
    box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.8), inset 0 15px 17px rgba(255, 255, 255, 0.8), inset 0 -5px 12px rgba(0, 0, 0, 0.02); }
  button:active, button:focus,
  input[type="button"]:active,
  input[type="button"]:focus,
  input[type="reset"]:active,
  input[type="reset"]:focus,
  input[type="submit"]:active,
  input[type="submit"]:focus {
    border-color: #aaa #bbb #bbb;
    box-shadow: inset 0 -1px 0 rgba(255, 255, 255, 0.5), inset 0 2px 5px rgba(0, 0, 0, 0.15); }

/* 4.2 Fields
----------------------------------------------------------*/
input[type="text"],
input[type="email"],
input[type="url"],
input[type="password"],
input[type="search"],
textarea {
  color: #666;
  border: 1px solid #ccc;
  border-radius: 3px; }
  input[type="text"]:focus,
  input[type="email"]:focus,
  input[type="url"]:focus,
  input[type="password"]:focus,
  input[type="search"]:focus,
  textarea:focus {
    color: #111; }

input[type="text"],
input[type="email"],
input[type="url"],
input[type="password"],
input[type="search"] {
  /* We define a list of values for both units */
  /* We define a list of values for both units */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  padding: 3px;
  /* We output the result */
  padding: 0.3rem;
  /* We output the result */ }

textarea {
  /* We define a list of values for both units */
  /* We define a list of values for both units */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  padding-left: 3px;
  /* We output the result */
  padding-left: 0.3rem;
  /* We output the result */
  width: 100%; }

/*--------------------------------------------------------------
5.0 Accessibility
--------------------------------------------------------------*/
/* Text meant only for screen readers. */
.screen-reader-text {
  clip: rect(1px, 1px, 1px, 1px);
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden; }
  .screen-reader-text:hover, .screen-reader-text:active, .screen-reader-text:focus {
    background-color: #fff;
    border-radius: 3px;
    box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.6);
    clip: auto !important;
    color: #21759b;
    display: block;
    font-size: 14px;
    font-size: 0.875rem;
    font-weight: bold;
    height: auto;
    left: 5px;
    line-height: normal;
    padding: 15px 23px 14px;
    text-decoration: none;
    top: 5px;
    width: auto;
    z-index: 100000;
    /* Above WP toolbar. */ }

/*--------------------------------------------------------------
6.0 Alignments
--------------------------------------------------------------*/
.alignleft {
  display: inline;
  float: left;
  /* We define a list of values for both units */
  /* We define a list of values for both units */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  margin-right: 20px;
  /* We output the result */
  margin-right: 2rem;
  /* We output the result */ }

.alignright {
  display: inline;
  float: right;
  /* We define a list of values for both units */
  /* We define a list of values for both units */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  margin-left: 20px;
  /* We output the result */
  margin-left: 2rem;
  /* We output the result */ }

.aligncenter {
  display: block;
  margin-left: auto;
  margin-right: auto; }

/*--------------------------------------------------------------
7.0 Clearings
--------------------------------------------------------------*/
.clear:before,
.clear:after,
.entry-content:before,
.entry-content:after,
.comment-content:before,
.comment-content:after,
.site-header:before,
.site-header:after,
.site-content:before,
.site-content:after,
.site-footer:before,
.site-footer:after {
  content: "";
  display: table; }

.clear:after,
.entry-content:after,
.comment-content:after,
.site-header:after,
.site-content:after,
.site-footer:after {
  clear: both; }

/*--------------------------------------------------------------
8.0 Layout
--------------------------------------------------------------*/
#page {
  max-width: 1080px;
  margin: 0 auto; }

#masthead {
  clear: both;
  width: 100%; }

#content {
  clear: both;
  width: 100%; }

#primary {
  float: left;
  width: 100%;
  margin: 0 -25% 0 0; }

#main {
  overflow: hidden;
  margin: 0 25% 0 0; }

#secondary {
  float: right;
  overflow: hidden;
  width: 25%; }

#colophon {
  clear: both;
  width: 100%; }

#tertiary {
  overflow: hidden;
  width: 100%; }

.site-footer .site-info {
  clear: both;
  overflow: hidden;
  width: 100%; }

/*--------------------------------------------------------------
9.0 Body (Background)
--------------------------------------------------------------*/
.site {
  border: none;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
  background-color: #fff; }

/*--------------------------------------------------------------
10.0 Navigation
--------------------------------------------------------------*/
.main-navigation,
.secondary-navigation {
  clear: both;
  display: block;
  float: left;
  width: 100%; }
  .main-navigation ul,
  .secondary-navigation ul {
    margin: 0;
    padding-left: 0;
    list-style: none; }
    .main-navigation ul ul,
    .secondary-navigation ul ul {
      z-index: 99999;
      position: absolute;
      float: left;
      left: -999em; }
      .main-navigation ul ul ul,
      .secondary-navigation ul ul ul {
        top: 0;
        left: -999em; }
      .main-navigation ul ul li:hover > ul,
      .secondary-navigation ul ul li:hover > ul {
        left: 100%; }
    .main-navigation ul li:hover > ul,
    .secondary-navigation ul li:hover > ul {
      left: auto; }
  .main-navigation li,
  .secondary-navigation li {
    position: relative;
    float: left; }
  .main-navigation a,
  .secondary-navigation a {
    display: block; }

/* 10.1 Top Navigation
----------------------------------------------------------*/
.secondary-navigation {
  /* We define a list of values for both units */
  /* We define a list of values for both units */
  /* We iterate through each value in the given parameter $values */
  /* If the value is either auto or 0, we append it to the list as-is */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  padding: 0 10px;
  /* We output the result */
  padding: 0 1rem;
  /* We output the result */
  border-top: none;
  border-bottom: none;
  background-color: #fff; }
  .secondary-navigation ul {
    float: right; }
    .secondary-navigation ul ul {
      top: 34px;
      border: 1px solid #808080;
      background-color: #fff;
      background-color: #fff; }
      .secondary-navigation ul ul ul {
        margin-top: 0; }
      .secondary-navigation ul ul a {
        width: 150px;
        /* We define a list of values for both units */
        /* We define a list of values for both units */
        /* We iterate through each value in the given parameter $values */
        /* If the value has a unit, we split it to get both the unit and the raw value */
        /* If the value has a unit, we split it to get both the unit and the raw value */
        /* We append according values to the lists depending on the unit of the given value */
        /* We iterate through each value in the given parameter $values */
        /* If the value has a unit, we split it to get both the unit and the raw value */
        /* If the value has a unit, we split it to get both the unit and the raw value */
        /* We append according values to the lists depending on the unit of the given value */
        padding: 2.5px 10px;
        /* We output the result */
        padding: 0.25rem 1rem;
        /* We output the result */ }
  .secondary-navigation li:hover > a {
    background-color: #808080;
    color: midnightblue; }
  .secondary-navigation a {
    /* We define a list of values for both units */
    /* We define a list of values for both units */
    /* We iterate through each value in the given parameter $values */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* We append according values to the lists depending on the unit of the given value */
    /* We iterate through each value in the given parameter $values */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* We append according values to the lists depending on the unit of the given value */
    padding: 5px 10px;
    /* We output the result */
    padding: 0.5rem 1rem;
    /* We output the result */
    font-family: sans-serif;
    font-size: 12px;
    font-size: 0.75rem;
    font-weight: normal;
    text-decoration: none;
    color: royalblue; }
    .secondary-navigation a:visited {
      color: royalblue; }
  .secondary-navigation .current_page_item > a,
  .secondary-navigation .current-menu-item > a,
  .secondary-navigation .current_page_ancestor > a {
    background-color: #f6f6f6;
    color: purple; }

/* 10.2 Primary Navigation
----------------------------------------------------------*/
.main-navigation {
  /* We define a list of values for both units */
  /* We define a list of values for both units */
  /* We iterate through each value in the given parameter $values */
  /* If the value is either auto or 0, we append it to the list as-is */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  padding: 0 20px;
  /* We output the result */
  padding: 0 2rem;
  /* We output the result */
  border-top: 1px solid #808080;
  border-bottom: 1px solid #808080;
  background-color: #fff; }
  .main-navigation ul ul {
    top: 53px;
    border: 1px solid #808080;
    background-color: #fff;
    background-color: #fff; }
    .main-navigation ul ul ul {
      margin-top: -1px; }
    .main-navigation ul ul a {
      width: 200px;
      /* We define a list of values for both units */
      /* We define a list of values for both units */
      /* We iterate through each value in the given parameter $values */
      /* If the value has a unit, we split it to get both the unit and the raw value */
      /* If the value has a unit, we split it to get both the unit and the raw value */
      /* We append according values to the lists depending on the unit of the given value */
      /* We iterate through each value in the given parameter $values */
      /* If the value has a unit, we split it to get both the unit and the raw value */
      /* If the value has a unit, we split it to get both the unit and the raw value */
      /* We append according values to the lists depending on the unit of the given value */
      padding: 5px 20px;
      /* We output the result */
      padding: 0.5rem 2rem;
      /* We output the result */ }
  .main-navigation li:hover > a {
    background-color: #808080;
    color: midnightblue; }
  .main-navigation a {
    /* We define a list of values for both units */
    /* We define a list of values for both units */
    /* We iterate through each value in the given parameter $values */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* We append according values to the lists depending on the unit of the given value */
    /* We iterate through each value in the given parameter $values */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* We append according values to the lists depending on the unit of the given value */
    padding: 10px 20px;
    /* We output the result */
    padding: 1rem 2rem;
    /* We output the result */
    font-family: sans-serif;
    font-size: 14px;
    font-size: 0.875rem;
    font-weight: bold;
    text-decoration: none;
    color: royalblue; }
    .main-navigation a:visited {
      color: royalblue; }
  .main-navigation .current_page_item > a,
  .main-navigation .current-menu-item > a,
  .main-navigation .current_page_ancestor > a {
    background-color: #f6f6f6;
    color: purple; }

/* Small menu */
.menu-toggle {
  display: none; }

@media screen and (max-width: 500px) {
  .menu-toggle,
  .main-navigation.toggled .nav-menu {
    display: block; }

  .main-navigation ul {
    display: none; } }
/*--------------------------------------------------------------
11.0 Header
--------------------------------------------------------------*/
.site-header {
  background-color: transparent; }

.site-branding {
  clear: both;
  /* We define a list of values for both units */
  /* We define a list of values for both units */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  padding: 20px 40px 40px;
  /* We output the result */
  padding: 2rem 4rem 4rem;
  /* We output the result */ }

h1.site-title {
  /* We define a list of values for both units */
  /* We define a list of values for both units */
  /* We iterate through each value in the given parameter $values */
  /* If the value is either auto or 0, we append it to the list as-is */
  /* If the two lists are the same, we ouput only one (like margin-top: 0) */
  margin: 0;
  /* We output the result */
  margin-left: -2px;
  font-family: sans-serif;
  font-size: 48px;
  font-size: 3rem;
  line-height: 1; }
  h1.site-title a,
  h1.site-title a:visited {
    text-decoration: none;
    color: royalblue; }
  h1.site-title a:hover,
  h1.site-title a:focus,
  h1.site-title a:active {
    text-decoration: none;
    color: midnightblue; }

h2.site-description {
  /* We define a list of values for both units */
  /* We define a list of values for both units */
  /* We iterate through each value in the given parameter $values */
  /* If the value is either auto or 0, we append it to the list as-is */
  /* If the two lists are the same, we ouput only one (like margin-top: 0) */
  margin: 0;
  /* We output the result */
  font-family: sans-serif;
  font-size: 16px;
  font-size: 1rem;
  line-height: 1;
  font-weight: bold; }

/*--------------------------------------------------------------
12.0 Sidebars
--------------------------------------------------------------*/
.widget-title {
  display: inline-block;
  width: 100%;
  /* We define a list of values for both units */
  /* We define a list of values for both units */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  margin-bottom: 5px;
  /* We output the result */
  margin-bottom: 0.5rem;
  /* We output the result */ }

.widget ul {
  margin: 0;
  padding: 0;
  list-style: none; }
  .widget ul ul {
    /* We define a list of values for both units */
    /* We define a list of values for both units */
    /* We iterate through each value in the given parameter $values */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* We append according values to the lists depending on the unit of the given value */
    padding-left: 10px;
    /* We output the result */
    padding-left: 1rem;
    /* We output the result */
    list-style-type: circle; }

.widget ol {
  margin: 0;
  /* We define a list of values for both units */
  /* We define a list of values for both units */
  /* We iterate through each value in the given parameter $values */
  /* If the value is either auto or 0, we append it to the list as-is */
  /* We iterate through each value in the given parameter $values */
  /* If the value is either auto or 0, we append it to the list as-is */
  /* We iterate through each value in the given parameter $values */
  /* If the value is either auto or 0, we append it to the list as-is */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  padding: 0 0 0 10px;
  /* We output the result */
  padding: 0 0 0 1rem;
  /* We output the result */
  list-style-type: decimal; }

.widget select {
  max-width: 100%; }

/* 12.1 Widgets
----------------------------------------------------------*/
.widget_search .search-submit {
  display: none; }

.tagcloud {
  text-align: justify; }

table#wp-calendar {
  margin: 0;
  border: none; }
  table#wp-calendar th,
  table#wp-calendar td {
    border: none;
    text-align: center; }
  table#wp-calendar tfoot,
  table#wp-calendar tfoot td {
    border: none; }
  table#wp-calendar td#prev {
    text-align: left; }
  table#wp-calendar td#next {
    text-align: right; }
  table#wp-calendar a {
    font-weight: bold; }

/* 12.2 Sidebar Widget Area
----------------------------------------------------------*/
.content-area {
  background-color: #f6f6f6; }

#secondary {
  /* We define a list of values for both units */
  /* We define a list of values for both units */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  padding: 10px;
  /* We output the result */
  padding: 1rem;
  /* We output the result */
  border: none;
  font-family: sans-serif;
  font-size: 14px;
  font-size: 0.875rem;
  background-color: #f6f6f6; }
  #secondary .widget {
    overflow: hidden;
    width: 100%;
    /* We define a list of values for both units */
    /* We define a list of values for both units */
    /* We iterate through each value in the given parameter $values */
    /* If the value is either auto or 0, we append it to the list as-is */
    /* If the two lists are the same, we ouput only one (like margin-top: 0) */
    margin: 0;
    /* We output the result */
    /* We define a list of values for both units */
    /* We define a list of values for both units */
    /* We iterate through each value in the given parameter $values */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* We append according values to the lists depending on the unit of the given value */
    padding: 10px;
    /* We output the result */
    padding: 1rem;
    /* We output the result */ }
  #secondary .widget-title,
  #secondary .widget_calendar caption {
    border-bottom: 1px solid #808080;
    font-family: sans-serif;
    font-size: 16px;
    font-size: 1rem;
    font-weight: bold; }
  #secondary a {
    text-decoration: none; }

/* 12.3 Footer Widget Area
----------------------------------------------------------*/
#tertiary {
  display: flex;
  justify-content: space-around;
  /* We define a list of values for both units */
  /* We define a list of values for both units */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  padding: 10px;
  /* We output the result */
  padding: 1rem;
  /* We output the result */
  border-top: 1px solid #808080;
  background-color: #f6f6f6;
  color: #404040;
  font-family: sans-serif;
  font-size: 14px;
  font-size: 0.875rem; }
  #tertiary .widget {
    float: left;
    overflow: hidden;
    flex-grow: 1;
    width: 300px;
    /* We define a list of values for both units */
    /* We define a list of values for both units */
    /* We iterate through each value in the given parameter $values */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* We append according values to the lists depending on the unit of the given value */
    margin: 10px;
    /* We output the result */
    margin: 1rem;
    /* We output the result */
    /* We define a list of values for both units */
    /* We define a list of values for both units */
    /* We iterate through each value in the given parameter $values */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* We append according values to the lists depending on the unit of the given value */
    padding: 20px;
    /* We output the result */
    padding: 2rem;
    /* We output the result */ }
  #tertiary .widget-title,
  #tertiary .widget_calendar caption {
    border-bottom: 1px solid #808080;
    font-family: sans-serif;
    font-size: 16px;
    font-size: 1rem;
    font-weight: bold; }
  #tertiary a {
    text-decoration: none; }

/*--------------------------------------------------------------
13.0 Content
--------------------------------------------------------------*/
.site-main {
  /* We define a list of values for both units */
  /* We define a list of values for both units */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  padding: 20px 20px;
  /* We output the result */
  padding: 2rem 2rem;
  /* We output the result */
  border-right: none;
  border: none;
  background-color: #fff;
  background-color: #fff; }

.page-header {
  background: #f6f6f6;
  /* We define a list of values for both units */
  /* We define a list of values for both units */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  margin: -20px -20px 20px;
  /* We output the result */
  margin: -2rem -2rem 2rem;
  /* We output the result */
  /* We define a list of values for both units */
  /* We define a list of values for both units */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  padding: 20px 20px;
  /* We output the result */
  padding: 2rem 2rem;
  /* We output the result */ }
  .page-header .page-title {
    font-weight: bold; }
  .page-header p {
    margin: 0; }

.sticky {
  display: block; }

.hentry {
  /* We define a list of values for both units */
  /* We define a list of values for both units */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  padding: 20px;
  /* We output the result */
  padding: 2rem;
  /* We output the result */ }

img.wp-post-image {
  display: block;
  /* We define a list of values for both units */
  /* We define a list of values for both units */
  /* We iterate through each value in the given parameter $values */
  /* If the value is either auto or 0, we append it to the list as-is */
  /* We iterate through each value in the given parameter $values */
  /* If the value is either auto or 0, we append it to the list as-is */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  margin: 0 auto 10px;
  /* We output the result */
  margin: 0 auto 1rem;
  /* We output the result */ }

.home .entry-header {
  display: none; }

.entry-header {
  /* We define a list of values for both units */
  /* We define a list of values for both units */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  margin-bottom: 20px;
  /* We output the result */
  margin-bottom: 2rem;
  /* We output the result */ }

h1.entry-title {
  margin-left: -2px; }
  h1.entry-title a,
  h1.entry-title a:visited {
    text-decoration: none;
    color: royalblue; }
  h1.entry-title a:hover,
  h1.entry-title a:focus,
  h1.entry-title a:active {
    text-decoration: none;
    color: midnightblue; }

.entry-meta {
  font-family: sans-serif;
  font-size: 14px;
  font-size: 0.875rem;
  color: #808080; }
  .entry-meta .edit-link {
    /* We define a list of values for both units */
    /* We define a list of values for both units */
    /* We iterate through each value in the given parameter $values */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* We append according values to the lists depending on the unit of the given value */
    margin-left: 20px;
    /* We output the result */
    margin-left: 2rem;
    /* We output the result */ }

.byline,
.updated:not(.published) {
  display: none; }

.single .byline,
.group-blog .byline {
  display: inline; }

.page-content,
.entry-content,
.entry-summary {
  text-align: justify; }
  .page-content h1,
  .page-content h2,
  .page-content h3,
  .page-content h4,
  .page-content h5,
  .page-content h6,
  .entry-content h1,
  .entry-content h2,
  .entry-content h3,
  .entry-content h4,
  .entry-content h5,
  .entry-content h6,
  .entry-summary h1,
  .entry-summary h2,
  .entry-summary h3,
  .entry-summary h4,
  .entry-summary h5,
  .entry-summary h6 {
    /* We define a list of values for both units */
    /* We define a list of values for both units */
    /* We iterate through each value in the given parameter $values */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* We append according values to the lists depending on the unit of the given value */
    /* We iterate through each value in the given parameter $values */
    /* If the value is either auto or 0, we append it to the list as-is */
    padding: 20px 0;
    /* We output the result */
    padding: 2rem 0;
    /* We output the result */ }
  .page-content p,
  .entry-content p,
  .entry-summary p {
    /* We define a list of values for both units */
    /* We define a list of values for both units */
    /* We iterate through each value in the given parameter $values */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* We append according values to the lists depending on the unit of the given value */
    margin-bottom: 20px;
    /* We output the result */
    margin-bottom: 2rem;
    /* We output the result */ }
  .page-content .more-link,
  .entry-content .more-link,
  .entry-summary .more-link {
    font-weight: bold; }

.entry-footer {
  font-family: sans-serif;
  font-size: 14px;
  font-size: 0.875rem;
  color: #808080; }
  .entry-footer span {
    display: inline-block;
    /* We define a list of values for both units */
    /* We define a list of values for both units */
    /* We iterate through each value in the given parameter $values */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* We append according values to the lists depending on the unit of the given value */
    margin-right: 20px;
    /* We output the result */
    margin-right: 2rem;
    /* We output the result */ }
  .entry-footer .edit-link {
    margin-right: 0; }

/* 13.1 Asides
----------------------------------------------------------*/
.blog .format-aside .entry-title,
.archive .format-aside .entry-title {
  display: none; }

/* 13.2 Navigation
----------------------------------------------------------*/
.site-main .comment-navigation, .site-main
.posts-navigation, .site-main
.post-navigation {
  overflow: hidden;
  /* We define a list of values for both units */
  /* We define a list of values for both units */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  margin: 20px 20px 20px;
  /* We output the result */
  margin: 2rem 2rem 2rem;
  /* We output the result */
  font-weight: bold; }
.comment-navigation .nav-previous,
.posts-navigation .nav-previous,
.post-navigation .nav-previous {
  float: left;
  width: 50%; }
.comment-navigation .nav-next,
.posts-navigation .nav-next,
.post-navigation .nav-next {
  float: right;
  text-align: right;
  width: 50%; }

.page-links {
  clear: both;
  /* We define a list of values for both units */
  /* We define a list of values for both units */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  margin-bottom: 20px;
  /* We output the result */
  margin-bottom: 2rem;
  /* We output the result */
  font-weight: bold; }
  .page-links a {
    text-decoration: none; }

.post-navigation {
  display: none; }

/* 13.3 Comments
----------------------------------------------------------*/
.comments-area {
  /* We define a list of values for both units */
  /* We define a list of values for both units */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  padding: 20px;
  /* We output the result */
  padding: 2rem;
  /* We output the result */
  text-align: justify;
  font-size: 14px;
  font-size: 0.875rem; }
  .comments-area h2.comments-title {
    margin-left: -1px;
    /* Fixes larger font alignment with smaller fonts */
    font-size: 20px;
    font-size: 1.25rem;
    line-height: 1.25; }
  .comments-area ol.comment-list {
    margin: 0;
    list-style: none; }
    .comments-area ol.comment-list ol.children {
      /* We define a list of values for both units */
      /* We define a list of values for both units */
      /* We iterate through each value in the given parameter $values */
      /* If the value has a unit, we split it to get both the unit and the raw value */
      /* If the value has a unit, we split it to get both the unit and the raw value */
      /* We append according values to the lists depending on the unit of the given value */
      /* We iterate through each value in the given parameter $values */
      /* If the value has a unit, we split it to get both the unit and the raw value */
      /* If the value has a unit, we split it to get both the unit and the raw value */
      /* We append according values to the lists depending on the unit of the given value */
      /* We iterate through each value in the given parameter $values */
      /* If the value has a unit, we split it to get both the unit and the raw value */
      /* If the value has a unit, we split it to get both the unit and the raw value */
      /* We append according values to the lists depending on the unit of the given value */
      /* We iterate through each value in the given parameter $values */
      /* If the value has a unit, we split it to get both the unit and the raw value */
      /* If the value has a unit, we split it to get both the unit and the raw value */
      /* We append according values to the lists depending on the unit of the given value */
      margin: 10px -10px 10px 20px;
      /* We output the result */
      margin: 1rem -1rem 1rem 2rem;
      /* We output the result */
      list-style: none; }
    .comments-area ol.comment-list li.comment {
      /* We define a list of values for both units */
      /* We define a list of values for both units */
      /* We iterate through each value in the given parameter $values */
      /* If the value has a unit, we split it to get both the unit and the raw value */
      /* If the value has a unit, we split it to get both the unit and the raw value */
      /* We append according values to the lists depending on the unit of the given value */
      padding: 10px;
      /* We output the result */
      padding: 1rem;
      /* We output the result */ }
    .comments-area ol.comment-list li.even {
      background: #f6f6f6; }
    .comments-area ol.comment-list li.odd {
      background: #fff; }

.comment-author {
  font-size: 16px;
  font-size: 1rem; }
  .comment-author img.avatar {
    float: left;
    /* We define a list of values for both units */
    /* We define a list of values for both units */
    /* We iterate through each value in the given parameter $values */
    /* If the value is either auto or 0, we append it to the list as-is */
    /* We iterate through each value in the given parameter $values */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* We append according values to the lists depending on the unit of the given value */
    /* We iterate through each value in the given parameter $values */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* We append according values to the lists depending on the unit of the given value */
    /* We iterate through each value in the given parameter $values */
    /* If the value is either auto or 0, we append it to the list as-is */
    margin: 0 10px 10px 0;
    /* We output the result */
    margin: 0 1rem 1rem 0;
    /* We output the result */ }

.bypostauthor {
  /* Comments by post author */
  display: block;
  border-top: 5px solid #eee;
  background-color: transparent; }
  .bypostauthor .fn {
    color: inherit; }

.comment-metadata .edit-link {
  /* We define a list of values for both units */
  /* We define a list of values for both units */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  margin-left: 10px;
  /* We output the result */
  margin-left: 1rem;
  /* We output the result */ }

.comment-content {
  clear: both; }
  .comment-content p {
    /* We define a list of values for both units */
    /* We define a list of values for both units */
    /* We iterate through each value in the given parameter $values */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* We append according values to the lists depending on the unit of the given value */
    margin-bottom: 10px;
    /* We output the result */
    margin-bottom: 1rem;
    /* We output the result */ }
  .comment-content a {
    word-wrap: break-word; }

.comment-respond {
  /* We define a list of values for both units */
  /* We define a list of values for both units */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  margin-top: 20px;
  /* We output the result */
  margin-top: 2rem;
  /* We output the result */ }
  .comment-respond h3 {
    margin-left: -1px;
    /* Fixes larger font alignment with smaller fonts */
    font-size: 20px;
    font-size: 1.25rem;
    line-height: 1.25; }
  .comment-respond p {
    /* We define a list of values for both units */
    /* We define a list of values for both units */
    /* We iterate through each value in the given parameter $values */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* We append according values to the lists depending on the unit of the given value */
    margin-bottom: 10px;
    /* We output the result */
    margin-bottom: 1rem;
    /* We output the result */ }
  .comment-respond p.form-submit {
    margin-bottom: 0; }
  .comment-respond label {
    display: inline-block;
    width: 70px; }
  .comment-respond .form-allowed-tags,
  .comment-respond .form-allowed-tags code {
    font-size: 14px;
    font-size: 0.875rem;
    color: #808080; }

/* 13.4 404
----------------------------------------------------------*/
.error-404 {
  /* We define a list of values for both units */
  /* We define a list of values for both units */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  padding: 20px;
  /* We output the result */
  padding: 2rem;
  /* We output the result */ }
  .error-404 .entry-title {
    text-align: center; }
  .error-404 .entry-content {
    text-align: center; }

/*--------------------------------------------------------------
14.0 Footer
--------------------------------------------------------------*/
.site-footer .site-info {
  /* We define a list of values for both units */
  /* We define a list of values for both units */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  padding: 10px 40px;
  /* We output the result */
  padding: 1rem 4rem;
  /* We output the result */
  border-top: 1px solid #808080;
  background-color: #fff;
  color: #404040;
  font-family: Georgia, serif;
  font-size: 12px;
  font-size: 0.75rem; }
  .site-footer .site-info .copyright {
    float: left; }
  .site-footer .site-info .theme-info {
    float: right; }
  .site-footer .site-info a {
    text-decoration: none; }

/*--------------------------------------------------------------
15.0 Theme Specific
--------------------------------------------------------------*/
/*--------------------------------------------------------------
16.0 Plugins
--------------------------------------------------------------*/
/* 16.1 Ninja Forms
----------------------------------------------------------*/
.ninja-forms-required-items {
  float: right;
  font-size: small;
  font-style: italic; }

.ninja-forms-error-msg {
  /* We define a list of values for both units */
  /* We define a list of values for both units */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  margin-bottom: 20px;
  /* We output the result */
  margin-bottom: 2rem;
  /* We output the result */
  font-weight: bold; }

.ninja-forms-field-error {
  float: left;
  color: #F00; }

.submit-wrap {
  text-align: center; }

/*--------------------------------------------------------------
17.0 Infinite scroll
--------------------------------------------------------------*/
/* Globally hidden elements when Infinite Scroll is supported and in use. */
.infinite-scroll .posts-navigation,
.infinite-scroll.neverending .site-footer {
  /* Theme Footer (when set to scrolling) */
  display: none; }

/* When Infinite Scroll has reached its end we need to re-display elements that were hidden (via .neverending) before. */
.infinity-end.neverending .site-footer {
  display: block; }

/*--------------------------------------------------------------
18.0 Media
--------------------------------------------------------------*/
.page-content .wp-smiley,
.entry-content .wp-smiley,
.comment-content .wp-smiley {
  border: none;
  margin-bottom: 0;
  margin-top: 0;
  padding: 0; }

/* Make sure embeds and iframes fit their containers. */
embed,
iframe,
object {
  max-width: 100%; }

/* 18.1 Captions
----------------------------------------------------------*/
.wp-caption {
  /* We define a list of values for both units */
  /* We define a list of values for both units */
  /* We iterate through each value in the given parameter $values */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* If the value has a unit, we split it to get both the unit and the raw value */
  /* We append according values to the lists depending on the unit of the given value */
  margin-bottom: 20px;
  /* We output the result */
  margin-bottom: 2rem;
  /* We output the result */
  max-width: 100%; }
  .wp-caption img[class*="wp-image-"] {
    display: block;
    margin-left: auto;
    margin-right: auto; }
  .wp-caption .wp-caption-text {
    margin: 0;
    font-size: 14px;
    font-size: 0.875rem;
    font-style: italic; }

.wp-caption-text {
  text-align: center; }

/* 18.2 Galleries
----------------------------------------------------------*/
.gallery {
  margin-bottom: 2rem; }

.gallery-item {
  display: inline-block;
  width: 100%;
  margin: 0;
  vertical-align: top;
  text-align: center; }
  .gallery-columns-2 .gallery-item {
    max-width: 50%; }
  .gallery-columns-3 .gallery-item {
    max-width: 33.33%; }
  .gallery-columns-4 .gallery-item {
    max-width: 25%; }
  .gallery-columns-5 .gallery-item {
    max-width: 20%; }
  .gallery-columns-6 .gallery-item {
    max-width: 16.66%; }
  .gallery-columns-7 .gallery-item {
    max-width: 14.28%; }
  .gallery-columns-8 .gallery-item {
    max-width: 12.5%; }
  .gallery-columns-9 .gallery-item {
    max-width: 11.11%; }

.gallery-caption {
  display: block; }

/*--------------------------------------------------------------
19.0 Mobile Responsive
--------------------------------------------------------------*/
@media (max-width: 500px) {
  .secondary-navigation {
    display: none; }

  .site-branding {
    /* We define a list of values for both units */
    /* We define a list of values for both units */
    /* We iterate through each value in the given parameter $values */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* We append according values to the lists depending on the unit of the given value */
    padding: 20px;
    /* We output the result */
    padding: 2rem;
    /* We output the result */ }

  .main-navigation {
    /* We define a list of values for both units */
    /* We define a list of values for both units */
    /* We iterate through each value in the given parameter $values */
    /* If the value is either auto or 0, we append it to the list as-is */
    /* We iterate through each value in the given parameter $values */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* We append according values to the lists depending on the unit of the given value */
    padding: 0 20px;
    /* We output the result */
    padding: 0 2rem;
    /* We output the result */ }
    .main-navigation a {
      /* We define a list of values for both units */
      /* We define a list of values for both units */
      /* We iterate through each value in the given parameter $values */
      /* If the value has a unit, we split it to get both the unit and the raw value */
      /* If the value has a unit, we split it to get both the unit and the raw value */
      /* We append according values to the lists depending on the unit of the given value */
      /* We iterate through each value in the given parameter $values */
      /* If the value has a unit, we split it to get both the unit and the raw value */
      /* If the value has a unit, we split it to get both the unit and the raw value */
      /* We append according values to the lists depending on the unit of the given value */
      padding: 5px 10px;
      /* We output the result */
      padding: 0.5rem 1rem;
      /* We output the result */ }

  #primary {
    float: left;
    margin: 0; }

  #main {
    margin: 0;
    /* We define a list of values for both units */
    /* We define a list of values for both units */
    /* We iterate through each value in the given parameter $values */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* We append according values to the lists depending on the unit of the given value */
    padding: 10px;
    /* We output the result */
    padding: 1rem;
    /* We output the result */ }

  .hentry {
    /* We define a list of values for both units */
    /* We define a list of values for both units */
    /* We iterate through each value in the given parameter $values */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* We append according values to the lists depending on the unit of the given value */
    padding: 10px;
    /* We output the result */
    padding: 1rem;
    /* We output the result */ }

  .site-main .comment-navigation, .site-main
  .posts-navigation, .site-main
  .post-navigation {
    /* We define a list of values for both units */
    /* We define a list of values for both units */
    /* We iterate through each value in the given parameter $values */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* We append according values to the lists depending on the unit of the given value */
    /* We iterate through each value in the given parameter $values */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* We append according values to the lists depending on the unit of the given value */
    margin: 20px 10px;
    /* We output the result */
    margin: 2rem 1rem;
    /* We output the result */ }

  #secondary {
    float: left;
    width: 100%;
    /* We define a list of values for both units */
    /* We define a list of values for both units */
    /* We iterate through each value in the given parameter $values */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* We append according values to the lists depending on the unit of the given value */
    padding: 10px;
    /* We output the result */
    padding: 1rem;
    /* We output the result */ }
    #secondary .widget {
      /* We define a list of values for both units */
      /* We define a list of values for both units */
      /* We iterate through each value in the given parameter $values */
      /* If the value is either auto or 0, we append it to the list as-is */
      /* If the two lists are the same, we ouput only one (like margin-top: 0) */
      margin: 0;
      /* We output the result */
      /* We define a list of values for both units */
      /* We define a list of values for both units */
      /* We iterate through each value in the given parameter $values */
      /* If the value has a unit, we split it to get both the unit and the raw value */
      /* If the value has a unit, we split it to get both the unit and the raw value */
      /* We append according values to the lists depending on the unit of the given value */
      padding: 10px;
      /* We output the result */
      padding: 1rem;
      /* We output the result */ }

  #tertiary {
    flex-direction: column;
    /* We define a list of values for both units */
    /* We define a list of values for both units */
    /* We iterate through each value in the given parameter $values */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* We append according values to the lists depending on the unit of the given value */
    padding: 10px;
    /* We output the result */
    padding: 1rem;
    /* We output the result */ }
    #tertiary .widget {
      /* We define a list of values for both units */
      /* We define a list of values for both units */
      /* We iterate through each value in the given parameter $values */
      /* If the value is either auto or 0, we append it to the list as-is */
      /* If the two lists are the same, we ouput only one (like margin-top: 0) */
      margin: 0;
      /* We output the result */
      /* We define a list of values for both units */
      /* We define a list of values for both units */
      /* We iterate through each value in the given parameter $values */
      /* If the value has a unit, we split it to get both the unit and the raw value */
      /* If the value has a unit, we split it to get both the unit and the raw value */
      /* We append according values to the lists depending on the unit of the given value */
      padding: 10px;
      /* We output the result */
      padding: 1rem;
      /* We output the result */ }

  .site-footer .site-info {
    /* We define a list of values for both units */
    /* We define a list of values for both units */
    /* We iterate through each value in the given parameter $values */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* We append according values to the lists depending on the unit of the given value */
    /* We iterate through each value in the given parameter $values */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* If the value has a unit, we split it to get both the unit and the raw value */
    /* We append according values to the lists depending on the unit of the given value */
    padding: 10px 20px;
    /* We output the result */
    padding: 1rem 2rem;
    /* We output the result */ }
    .site-footer .site-info .theme-info {
      float: left; } }

/*# sourceMappingURL=style.css.map */
